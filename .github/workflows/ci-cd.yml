name: CI/CD Pipeline for ip2location

on:
  push:
    branches:
      - main    # Runs on pushes to the "main" branch
  pull_request:
    branches:
      - main    # Runs for PRs targeting the "main" branch

jobs:
  # Job 1: Build and test the Go application
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19  # Specify your Go version

      # Step 3: Cache dependencies
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: go mod tidy

      # Step 5: Run tests
      - name: Run tests
        run: go test ./... -v

  # Job 2: Docker image build and push
  docker:
    runs-on: ubuntu-latest
    needs: build-and-test  # This job depends on the successful completion of build-and-test

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Set in the repository settings
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ip2location:latest .

      # Step 4: Push Docker image
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ip2location:latest

  # Job 3: Deployment (Optional)
  deploy:
    runs-on: ubuntu-latest
    needs: docker  # This job depends on the successful completion of the docker job

    steps:
      - name: Deploy to server
        run: |
          echo "Deploying the Docker image..."
          # Add commands to deploy the container (e.g., SSH into a server)
